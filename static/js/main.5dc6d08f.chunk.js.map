{"version":3,"sources":["components/Movies.js","logo.svg","App.js","reportWebVitals.js","index.js"],"names":["Movie","props","className","src","poster_path","alt","title","vote","vote_average","overview","App","useState","movies","setMovies","searchTerm","setSearchTerm","useEffect","getMovies","API","fetch","then","res","json","data","console","log","results","Fragment","onSubmit","e","preventDefault","type","placeholder","value","onChange","target","length","map","movie","id","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+NA+BeA,GC/BA,I,MDgBD,SAACC,GAAD,OACV,sBAAKC,UAAU,QAAf,UACI,qBAAKC,IAhBG,mCAgBYF,EAAMG,YAAaC,IAAKJ,EAAMK,QAClD,sBAAKJ,UAAU,aAAf,UACI,6BAAKD,EAAMK,QACX,sBAAMJ,UAAS,eAjBLK,EAiB2BN,EAAMO,aAhBhDD,GAAQ,EACA,QAEFA,GAAQ,EACN,SAGA,QASH,SAA6DN,EAAMO,kBAGvE,sBAAKN,UAAU,aAAf,UACI,2CACA,4BAAID,EAAMQ,iBAtBD,IAACF,IEyDPG,MAhDf,WAAgB,IAAD,EACeC,mBAAS,IADxB,mBACNC,EADM,KACEC,EADF,OAGuBF,mBAAS,IAHhC,mBAGNG,EAHM,KAGMC,EAHN,KAIbC,qBAAU,WACRC,EAZJ,yHAaI,IAEF,IAAMA,EAAY,SAACC,GACjBC,MAAMD,GAAKE,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UACxBF,MAAK,SAACG,GACLC,QAAQC,IAAIF,GACZV,EAAUU,EAAKG,aAkBrB,OACE,eAAC,IAAMC,SAAP,WACE,mCACE,wDACA,sBAAMC,SAlBW,SAACC,GACtBA,EAAEC,iBACChB,IACDG,EArBN,6FAqB4BH,GACtBC,EAAc,MAcZ,SACE,uBAAOb,UAAU,SAAS6B,KAAK,SAASC,YAAY,YAAYC,MAAOnB,EAAYoB,SAVpE,SAACL,GACtBd,EAAcc,EAAEM,OAAOF,eAYrB,qBAAK/B,UAAU,kBAAf,SACGU,EAAOwB,OAAS,GAAKxB,EAAOyB,KAAI,SAAAC,GAAK,OACpC,cAAC,EAAD,eAA0BA,GAAdA,EAAMC,aCzCbC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBtB,MAAK,YAAkD,IAA/CuB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.5dc6d08f.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst IMG_API = \"https://image.tmdb.org/t/p/w1280\";\r\n\r\nconst setVoteClass = (vote) => {\r\n    if(vote >= 8){\r\n        return 'green'\r\n    }\r\n    else if (vote >= 6){\r\n        return 'orange'\r\n    }\r\n    else{\r\n        return 'red';\r\n    }\r\n}\r\n\r\nconst Movie = (props) => (\r\n    <div className=\"movie\">\r\n        <img src={IMG_API + props.poster_path} alt={props.title}/>\r\n        <div className=\"movie-info\">\r\n            <h3>{props.title}</h3>\r\n            <span className={`tag ${setVoteClass(props.vote_average)}`}>{props.vote_average}</span>\r\n        </div>\r\n\r\n        <div className=\"movie-over\">\r\n            <h2>Overview:</h2>\r\n            <p>{props.overview}</p>\r\n        </div>\r\n    </div>\r\n)\r\n\r\nexport default Movie;\r\n","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, {useEffect, useState } from \"react\";\nimport logo from './logo.svg';\nimport './App.css';\nimport Movie from './components/Movies'\n\nconst FEATURED_API =\n\"https://api.themoviedb.org/3/discover/movie?sort_by=popularity.desc&api_key=04c35731a5ee918f014970082a0088b1&page=1\";\n\nconst IMGPATH = \"https://image.tmdb.org/t/p/w1280\";\n\nconst SEARCHAPI =\n\"https://api.themoviedb.org/3/search/movie?&api_key=04c35731a5ee918f014970082a0088b1&query=\";\n\nfunction App() {\n  const [movies, setMovies] = useState([]);\n\n  const [searchTerm, setSearchTerm] = useState('');\n  useEffect(() => {\n    getMovies(FEATURED_API);\n  },[])\n\n  const getMovies = (API) =>{\n    fetch(API).then(res => res.json())\n      .then((data) => {\n        console.log(data);\n        setMovies(data.results);\n      })    \n  }\n\n  const handleOnSubmit = (e) =>{\n    e.preventDefault();\n    if(searchTerm){\n      getMovies(SEARCHAPI + searchTerm);    \n      setSearchTerm(\"\");\n    }\n\n  }\n\n  const handleOnChange = (e) => {\n    setSearchTerm(e.target.value);\n  }\n\n\n  return (\n    <React.Fragment>\n      <header>\n        <h1>Movie Search React App</h1>\n        <form onSubmit={handleOnSubmit}>\n          <input className=\"search\" type=\"search\" placeholder=\"Search...\" value={searchTerm} onChange={handleOnChange}/>\n        </form>\n      </header>\n      <div className=\"movie-container\">\n        {movies.length > 0 && movies.map(movie => (\n          <Movie key={movie.id} {...movie}/>\n        ))}\n      </div>\n    </React.Fragment>\n  );\n  \n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}